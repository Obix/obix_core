///
   Copyright (C) 2009-2012 Christian Neumanns (www.rps-obix.com)
   This code can be used under the terms of the 'GNU Afero General Public License version 3'
   The full text of this license can be found at http://www.gnu.org/licenses/agpl.html
   THIS CODE IS DISTRIBUTED WITHOUT ANY WARRANTY. See the license for details.
end ///

factory relative_directory type:relative_directory

	java_header
		import java.io.File;

		import org.obix.obix_core.basics.scalars.string.string_value.fa_string_value;
	end java_header

	java
		private File a_file ;
		public File java_value() {return a_file;}
	end java

	attribute name
		get
			script
				var string_value value
				java
					v_value = new fa_string_value ( a_file.getName() ) ;
				end java
				o_name = fa_directory_name.create ( v_value )
			end
		end
	end

	attribute parent_directory
		get
			script
				var string_value v_parent_name
				java
					String v_parent = a_file.getParent();
					v_parent_name = v_parent != null ? new fa_string_value ( v_parent ) : null ;
				end java
				if v_parent_name #r void then
					o_parent_directory = fa_relative_directory.co_create ( v_parent_name )
				end if
			end
		end
	end
	
	attribute is_root_directory
		get
			script
				o_is_root_directory = a_parent_directory =r void
			end
		end
	end
	
	%file_system_item_factory_commands
	
	command append_child_name
		script
			o_result = create_from_root_and_child_name ( &
				root_directory = this &
				child_name = i_child_name )
		end
	end

	command append_child_directory
		script
			o_result = create_from_root_and_child_directory ( &
				root_directory = this &
				child_directory = i_child_directory )
		end
	end

	command append_relative_file
		script
			o_result = fa_relative_file.create ( a_value & i_file.value )
		end
	end

	command make_absolute_directory
		script
			o_result = i_root_directory.append_child_directory ( this )
		end
	end

	creator create kind:in_all
		script
			java
				o_result.a_file = new File ( i_value.java_value() ) ;
			end java
			o_result.a_value = i_value
		end
	end

	creator create_from_string
		in string type:simple_string voidable:yes end
		in config type:string_to_object_converter_config default:se_string_to_object_converter_config.default_value end
		in append_separator_at_end_if_omitted type:yes_no default:yes end
		%system_error_handler_input_argument
		
		%result_or_string_to_object_conversion_error_void_output<relative_directory>
		
		script
			var system_error conversion_error
			section convert
				if i_string =r void then
					if i_config.void_input_allowed then
						o_result = void
						exit script
					else
						o_result = void
						v_conversion_error = fa_system_error.create ( description = "A void string input is not allowed." )
						exit section
					end if
				end if

				var string directory_path = i_string.to_string

				if i_append_separator_at_end_if_omitted and not v_directory_path.is_empty then
					const string last_char = v_directory_path.last_item.to_string
					if c_last_char #v se_directory.Unix_directory_separator and c_last_char #v se_directory.Windows_directory_separator then
						v_directory_path = v_directory_path & se_directory.current_OS_directory_separator
					end if
				end if

				o_result = create ( v_directory_path.value ) on_error:continue

				if v_program_error_ =r void then
					exit script
				end if
				
				if v_directory_path =v se_string_constants.empty_string then
					if i_config.empty_string_is_void then
						o_result = void
						exit script
					end if

				else if i_config.void_value_as_string #r void and v_directory_path =v i_config.void_value_as_string then
					o_result = void
					exit script

				end if

				v_conversion_error = fa_system_error.create ( description = se_program_error.get_source_error_of_program_error ( v_program_error_ ).description )
			end section
			
			o_result = void
			o_error = fa_string_to_object_conversion_error.create ( &
				i_id = "string_to_relative_directory_conversion_error" &
				description = """'{{se_any_type.force_object_to_string(i_string)}}' cannot be converted to an object of type 'relative_directory'. Reason:
{{v_conversion_error.description}}'""" &
				data = i_string &
				type_of_result = "relative_directory" &
				error_position = void )
			i_error_handler.handle_system_error ( o_error )
		end
	end

	// TD creator create_from_URI

	creator create_from_directory_name
		in directory_name type:directory_name end

		out result type:relative_directory end

		script
			o_result = co_create ( i_directory_name.value & se_directory.current_OS_directory_separator.value )
		end
	end
	
	creator create_from_root_and_child_name
		in root_directory type:relative_directory end
		in child_name type:directory_name end

		out result type:relative_directory end

		script
			o_result = co_create ( i_root_directory.value & i_child_name.value & se_directory.current_OS_directory_separator.value )
		end
	end
	
	creator create_from_root_and_id
		in root_directory type:relative_directory end
		in i_id type:id end

		out result type:relative_directory end

		script
			o_result = co_create ( i_root_directory.value & i_id.value & se_directory.current_OS_directory_separator.value )
		end
	end
	
	creator create_from_root_and_child_directory
		in root_directory type:relative_directory end
		in child_directory type:relative_directory end

		out result type:relative_directory end

		script
			o_result = co_create ( i_root_directory.value & i_child_directory.value )
		end
	end
	
	
end factory