///
   Copyright (C) 2009-2012 Christian Neumanns (www.rps-obix.com)
   This code can be used under the terms of the 'GNU Afero General Public License version 3'
   The full text of this license can be found at http://www.gnu.org/licenses/agpl.html
   THIS CODE IS DISTRIBUTED WITHOUT ANY WARRANTY. See the license for details.
end ///

service time_constants

	attribute_list type:positive32

		attribute milli_seconds_in_second default: 1000 end
		attribute seconds_in_minute default: 60 end
		attribute minutes_in_hour default: 60 end
		attribute hours_in_day default: 24 end

		attribute milli_seconds_in_minute default: a_seconds_in_minute * a_milli_seconds_in_second end
		attribute milli_seconds_in_hour default: a_milli_seconds_in_minute * a_minutes_in_hour end
		attribute milli_seconds_in_day default: a_hours_in_day * a_milli_seconds_in_hour end

		attribute seconds_in_hour default: a_minutes_in_hour * a_seconds_in_minute end
		attribute seconds_in_day default: a_seconds_in_hour * a_hours_in_day end

		attribute minutes_in_day default: a_hours_in_day * a_minutes_in_hour end

	end
	
	attribute ISO_time_separator type:string default:":" end

	attribute ISO_local_time_format type:non_empty_string default: "HH:mm:ss" end
	
	attribute ISO_local_time_regex type:regex
		default
			script
				o_ISO_local_time_regex = fa_regex.create ( '''^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$'''~ )
			end
			test
				script
					test
					const regex r = v_ISO_local_time_regex
					
					// valid
					verify "00:00:00".matches_regex(r)
					verify "23:59:59".matches_regex(r)
					verify "08:02:03".matches_regex(r)
					verify "16:35:10".matches_regex(r)

					// invalid
					verify not "12:30".matches_regex(r)
					verify not "123044".matches_regex(r)
					verify not "12:30:44.123".matches_regex(r)
					verify not "24:00:00".matches_regex(r)
					verify not "12:60:00".matches_regex(r)
					verify not "12:12:61".matches_regex(r)
					verify not "8:15:12".matches_regex(r)
					verify not "08:1:14".matches_regex(r)
					verify not "08:23:9".matches_regex(r)
				end
			end
		end
	end

end
