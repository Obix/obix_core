///
   Copyright (C) 2009-2012 Christian Neumanns (www.rps-obix.com)
   This code can be used under the terms of the 'GNU Afero General Public License version 3'
   The full text of this license can be found at http://www.gnu.org/licenses/agpl.html
   THIS CODE IS DISTRIBUTED WITHOUT ANY WARRANTY. See the license for details.
end ///

service events

	java_header
		import org.obix.obix_core.events.*;
		import org.obix.obix_core.events.event_source.*;
		import org.obix.obix_core.events.event_script.*;

		import org.obix.obix_core.identifier.in_id;
		import org.obix.obix_core.identifier.fa_id;

		import org.obix.obix_core.collections.lists.indexed_list.generified.in_mutable_indexed_string_list;
		import org.obix.obix_core.collections.lists.indexed_list.generified.fa_mutable_indexed_string_list;
		
		import org.obix.obix_core.reflection.se_reflection;
		import org.obix.obix_core.reflection.root_software_element.nongeneric_RSE.service.in_service;
		import org.obix.obix_core.reflection.RSE_feature.command.in_command_id;
		import org.obix.obix_core.reflection.RSE_feature.command.fa_command_id;
	end java_header

	java
		public static class _java_event_handler_entry {
		
			public String a_event_id;
			public in_event_handler a_event_handler;

			public _java_event_handler_entry ( String i_event_id, in_event_handler i_event_handler ) {
				this.a_event_id = i_event_id;
				this.a_event_handler = i_event_handler;
			}
		}

		// helper for generate_event instruction

		public static void _co_generate_event ( String i_event_id, in_event i_event, java.util.ArrayList<_java_event_handler_entry> i_event_handler_list ) {
			for (java.util.Iterator<_java_event_handler_entry> i = i_event_handler_list.iterator(); i.hasNext();) {
				_java_event_handler_entry v_entry = i.next();
				if (v_entry.a_event_id.equals(i_event_id)) {
					v_entry.a_event_handler.getEvent_script().co_execute_command(i_event);
				}
			}
		}

		// helpers for on_event instruction

		public static in_object_event_source _co_object_event_source ( in_any_type i_expression ) {

			return fa_object_event_source.co_create_command(i_expression);
		}

		public static in_service_event_source _co_service_event_source ( String i_service_id_path ) {

			// in_service_proxy v_service_proxy = se_reflection.co_service_proxy_by_prefixed_id_path_string_command ( new fa_non_empty_string(i_service_id_path) );
			in_service v_service = se_reflection.co_service_by_prefixed_id_path_string_command ( new fa_string(i_service_id_path) );

			return fa_service_event_source.co_create_command ( v_service );
		}

		public static in_object_command_event_script _co_object_command_event_script ( in_any_type i_event_script_object, String i_command_id ) {

			in_command_id v_command_id = fa_command_id.co_create_command(new fa_string_value(i_command_id));

			return fa_object_command_event_script.co_create_command ( i_event_script_object, v_command_id );
		}

		public static in_service_script_event_script _co_service_script_event_script ( String i_service_id_path, String i_script_id ) {

			// in_service_proxy v_service_proxy = se_reflection.co_service_proxy_by_prefixed_id_path_string_command ( new fa_non_empty_string(i_service_id_path) );
			in_service v_service = se_reflection.co_service_by_prefixed_id_path_string_command ( new fa_string(i_service_id_path) );

			in_id v_script_id = fa_id.co_create_command(new fa_string_value(i_script_id));

			return fa_service_script_event_script.co_create_command ( v_service, v_script_id );
		}

		public static in_event_handler _co_on_event ( in_event_source i_event_source, in_event_script i_event_script, String[] i_event_id_list, java.util.ArrayList<_java_event_handler_entry> i_event_handler_list ) {

			in_mutable_indexed_string_list v_event_id_list = fa_mutable_indexed_string_list.co_create_command();

			in_event_handler o_event_handler = fa_event_handler.co_create_command ( i_event_source, v_event_id_list, i_event_script );

			for (int i=0; i < i_event_id_list.length; i++) {
				String v_event_id = i_event_id_list[i];
				v_event_id_list.co_append_command(new fa_string(v_event_id));
				i_event_handler_list.add(new _java_event_handler_entry(v_event_id, o_event_handler));
			}

			return o_event_handler;
		}
	end java

end service
